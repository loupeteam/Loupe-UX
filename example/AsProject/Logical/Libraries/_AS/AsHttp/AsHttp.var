VAR CONSTANT
	httpERR_BUFFER_SIZE : UINT := 35550; (*buffer is too small*)
	httpERR_DATA_SIZE : UINT := 35551; (*data buffer is too small*)
	httpERR_HEADER_SIZE_RAW : UINT := 35552; (*raw header size buffer is too small or raw header is too long*)
	httpERR_HEADER_SIZE_USERLINE : UINT := 35553; (*any of requested user line is too long for the structure*)
	httpERR_INVALID_PARAM : UINT := 35554; (*check parameters. At least one of needed ones is zero*)
	httpERR_NO_DATA : UINT := 35555; (*no data retrieved*)
	httpERR_METHOD_UNSUPPORTED : UINT := 35556; (*method not supported, supported methods are PUT, POST, GET, DELETE*)
	httpERR_SERVICE_NO_WEBSERVER : UINT := 35557; (*webserver is disabled or not installed, webservice will not be available*)
	httpERR_SERVICE_LINK_FAILED : UINT := 35558; (*webservice could not be registered, check registration*)
	httpERR_CLIENT_ERR_SOCKET_CREATE : UINT := 35559; (*could not create a new socket. Try again later*)
	httpERR_CLIENT_NO_MORE_IDENTS : UINT := 35560; (*too many httpClients enabled, disable unused instances*)
	httpERR_CLIENT_TCP_CONN_CLOSED : UINT := 35561; (*informational, no error: Connection closed. Possible reasons: HTTP/1.0, use of "Connection: close" header, Keep-Alive timeout*)
	httpERR_CLIENT_TCP_CONN_FAILED : UINT := 35562; (*could not connect to given server. Check network parameters and server aviability*)
	httpERR_CLIENT_TCP_INVALID_HOST : UINT := 35563; (*could not resolve name or IP-address of server, check pHost*)
	httpERR_CLIENT_TCP_DISCONNECTED : UINT := 35564; (*lost connection unexpectedly*)
	httpERR_NOT_FOUND : UINT := 35565; (*source string didn't contain parameter*)
	httpERR_ILLEGAL_CHARACTERS : UINT := 35566; (*source contains characters, that couldn't be transformd*)
	httpERR_SSL_HANDSHAKE_FAILED : UINT := 35567; (*client handshake failed*)
	httpERR_INVALID_SSL_CONFIG : UINT := 35568; (*Could not open ssl configuration*)
	httpERR_SYSTEM : UINT := 35579; (*general error, see help*)
	httpMETHOD_GET : UINT := 1; (*request method GET, additional request parameters are part of the URL*)
	httpMETHOD_POST : UINT := 2; (*request method POST, request contains a message body*)
	httpMETHOD_PUT : UINT := 3; (*request method PUT, request contains a message body*)
	httpMETHOD_DELETE : UINT := 4; (*request method DELETE, additional request parameters are part of the URL*)
	httpOPTION_HTTP_10 : UINT := 0; (*use HTTP/1.0 as protocol type*)
	httpOPTION_HTTP_11 : UINT := 1; (*use HTTP/1.1 as protocol type*)
	httpOPTION_SERVICE_TYPE_ROOT : UINT := 4; (*Type of service: root path, e.g. "/basePath", handles requests inside this virtual folder*)
	httpOPTION_SERVICE_TYPE_NAME : UINT := 2; (*Type of service: name, e.g. "hello.cgi", handles requests ending with this name*)
	httpOPTION_SERVICE_TYPE_EXT : UINT := 6; (*Type of service: file extension, e.g. "*.abc" handles requests with file extension ".abc"*)
	httpOPTION_SERVICE_TYPE_LEAF : UINT := 8; (*Type of service: relative path, e.g. "cgi-bin" handles requests in virtual subfolders called "cgi-bin"*)
	httpPHASE_NOT_CONNECTED : UINT := 0; (*not connected*)
	httpPHASE_SENDING : UINT := 1; (*sending a HTTP message*)
	httpPHASE_RECEIVING : UINT := 2; (*receiving a HTTP message*)
	httpPHASE_RECEIVED : UINT := 3; (*HTTP message received *)
	httpPHASE_WAITING : UINT := 4; (*idle state*)
END_VAR
